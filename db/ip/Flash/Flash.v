// Flash.v

// Generated using ACDS version 15.0 145

`timescale 1 ps / 1 ps
module Flash (
		input  wire        i_clock,                    //                 clk.clk
		output wire [21:0] FL_ADDR,                    //         conduit_end.ADDR
		output wire        FL_CE_N,                    //                    .CE_N
		output wire        FL_OE_N,                    //                    .OE_N
		output wire        FL_WE_N,                    //                    .WE_N
		output wire        FL_RST_N,                   //                    .RST_N
		inout  wire [7:0]  FL_DQ,                      //                    .DQ
		input  wire        i_avalon_chip_select,       //          flash_data.chipselect
		input  wire        i_avalon_write,             //                    .write
		input  wire        i_avalon_read,              //                    .read
		input  wire [19:0] i_avalon_address,           //                    .address
		input  wire [3:0]  i_avalon_byteenable,        //                    .byteenable
		input  wire [31:0] i_avalon_writedata,         //                    .writedata
		output wire [31:0] o_avalon_readdata,          //                    .readdata
		output wire        o_avalon_waitrequest,       //                    .waitrequest
		input  wire        i_avalon_erase_write,       // flash_erase_control.write
		input  wire        i_avalon_erase_read,        //                    .read
		input  wire [3:0]  i_avalon_erase_byteenable,  //                    .byteenable
		input  wire [31:0] i_avalon_erase_writedata,   //                    .writedata
		input  wire        i_avalon_erase_chip_select, //                    .chipselect
		output wire [31:0] o_avalon_erase_readdata,    //                    .readdata
		output wire        o_avalon_erase_waitrequest, //                    .waitrequest
		input  wire        i_reset_n                   //               reset.reset_n
	);

	Altera_UP_Flash_Memory_IP_Core_Avalon_Interface #(
		.FLASH_MEMORY_ADDRESS_WIDTH (22)
	) altera_up_flash_memory_ip_core_avalon_interface_0 (
		.i_avalon_chip_select       (i_avalon_chip_select),       //          flash_data.chipselect
		.i_avalon_write             (i_avalon_write),             //                    .write
		.i_avalon_read              (i_avalon_read),              //                    .read
		.i_avalon_address           (i_avalon_address),           //                    .address
		.i_avalon_byteenable        (i_avalon_byteenable),        //                    .byteenable
		.i_avalon_writedata         (i_avalon_writedata),         //                    .writedata
		.o_avalon_readdata          (o_avalon_readdata),          //                    .readdata
		.o_avalon_waitrequest       (o_avalon_waitrequest),       //                    .waitrequest
		.i_clock                    (i_clock),                    //                 clk.clk
		.i_reset_n                  (i_reset_n),                  //               reset.reset_n
		.FL_ADDR                    (FL_ADDR),                    //         conduit_end.export
		.FL_CE_N                    (FL_CE_N),                    //                    .export
		.FL_OE_N                    (FL_OE_N),                    //                    .export
		.FL_WE_N                    (FL_WE_N),                    //                    .export
		.FL_RST_N                   (FL_RST_N),                   //                    .export
		.FL_DQ                      (FL_DQ),                      //                    .export
		.i_avalon_erase_write       (i_avalon_erase_write),       // flash_erase_control.write
		.i_avalon_erase_read        (i_avalon_erase_read),        //                    .read
		.i_avalon_erase_byteenable  (i_avalon_erase_byteenable),  //                    .byteenable
		.i_avalon_erase_writedata   (i_avalon_erase_writedata),   //                    .writedata
		.i_avalon_erase_chip_select (i_avalon_erase_chip_select), //                    .chipselect
		.o_avalon_erase_readdata    (o_avalon_erase_readdata),    //                    .readdata
		.o_avalon_erase_waitrequest (o_avalon_erase_waitrequest)  //                    .waitrequest
	);

endmodule
